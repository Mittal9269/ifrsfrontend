{"version":3,"sources":["Components/From/Form.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"names":["Form","useState","isLike","Comment","data","setData","redirect","setRedirect","rate","setRate","useCookies","cookies","dispatch","useDispatch","history","useHistory","useEffect","fetch","process","method","headers","then","res","json","console","log","fooditemAction","itemCheck","catch","err","jwttoken","undefined","eventInput","event","target","name","value","preValue","to","className","class","onSubmit","e","preventDefault","window","confirm","toast","warning","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","defaultformAction","commentCheck","likeCheck","ratingCheck","push","defaultData","DidLike","Rating","UserId","ID","RatingFoods","LikeFoods","body","JSON","stringify","fetchdata","success","comment","setTimeout","location","reload","type","onChange","for","count","newRating","size","isHalf","emptyIcon","halfIcon","fullIcon","activeColor","placeholder","rows","cols","maxlength","newestOnTop","rtl","pauseOnFocusLoss","_defineProperty","obj","key","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","apply","_objectSpread2","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties"],"mappings":"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","file":"static/js/20.a1fa61c5.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router\";\nimport ReactStars from \"react-rating-stars-component\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { useCookies } from 'react-cookie';\n\nimport { defaultformAction } from \"../../store/defaultformstore\";\nimport { fooditemAction } from \"../../store/fooditemStore\";\nimport Navbar from \"../Navbar\";\n\n\nexport default function Form() {\n    // all states\n    const [data, setData] = useState({\n        isLike: \"\",\n        Comment: \"\",\n    });\n    const [redirect, setRedirect] = useState(false);\n    const [rate, setRate] = useState(0);\n    const [cookies, setCookie] = useCookies(['user']);  \n\n    // variables gobals\n    const dispatch = useDispatch();\n    let history = useHistory();\n\n    useEffect(() => {\n\n        fetch(process.env.REACT_APP_BACKEND + \"/menu/menuitem\", {\n            method: \"GET\",\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            }\n        }).then(res => res.json())\n            .then(res => {\n                console.log(res)\n                dispatch(fooditemAction.itemCheck(res))\n            })\n            .catch(err => console.log(err))\n            if (cookies.jwttoken && cookies.jwttoken !== undefined) {\n            } else {\n                setRedirect(true);\n            }\n\n    }, [cookies.jwttoken , dispatch])\n\n\n    //change Handlers\n    const eventInput = (event) => {\n        const { name, value } = event.target;\n        setData((preValue) => {\n            return {\n                ...preValue,\n                [name]: value\n            }\n        })\n    }\n    const ratingChanged = (newRating) => {\n        setRate(newRating);\n    };\n\n\n    //submit handler\n    const SubmitHandler = (e) => {\n        e.preventDefault();\n        let result = window.confirm(\"Do you want to continue to fill the form?\");\n\n        if (!result) {\n            if (rate === 0 || data.isLike === \"\") {\n                toast.warning('Please fill the form completely!', {\n                    position: \"top-center\",\n                    autoClose: 2000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n            else {\n                let defaultData = {\n                    DidLike: data.isLike === \"Yes\" ? true : false,\n                    Rating: rate,\n                    Comment: data.Comment,\n                    UserId: cookies.ID,\n                    RatingFoods: {},\n                    LikeFoods: []\n                }\n                fetch(process.env.REACT_APP_BACKEND + \"/form/form/\", {\n                    method: 'POST',\n                    headers: {\n                        'Accept': 'application/json',\n                        'Content-Type': 'application/json',\n                    },\n                    body: JSON.stringify(defaultData)\n                }).then(res => res.json())\n                    .then(fetchdata => {\n                        toast.success('Successfully saved', {\n                            position: \"top-center\",\n                            autoClose: 2000,\n                            hideProgressBar: false,\n                            closeOnClick: true,\n                            pauseOnHover: true,\n                            draggable: true,\n                            progress: undefined,\n                        });\n\n                        setData({\n                            isLike: \"\",\n                            comment: \"\",\n                        })\n                        dispatch(defaultformAction.commentCheck(\"\"));\n                        dispatch(defaultformAction.likeCheck(\"\"));\n                        dispatch(defaultformAction.ratingCheck(0));\n                        setTimeout(() => {\n                            window.location.reload();\n                            // history.push(\"/review\");\n                        }, 2000);\n                    })\n                    .catch(err => console.log(err))\n            }\n        } else {\n            if (rate === 0 || data.isLike === \"\") {\n                return toast.warning('Please fill the form completely.', {\n                    position: \"top-center\",\n                    autoClose: 2000,\n                    hideProgressBar: false,\n                    closeOnClick: true,\n                    pauseOnHover: true,\n                    draggable: true,\n                    progress: undefined,\n                });\n            }\n            else {\n                dispatch(defaultformAction.commentCheck(data.Comment));\n                dispatch(defaultformAction.likeCheck(data.isLike));\n                dispatch(defaultformAction.ratingCheck(rate));\n                history.push(\"/review2\");\n            }\n\n        }\n\n\n    }\n\n\n\n\n    return (\n        <>\n            <Navbar />\n            {redirect && <Redirect to=\"/\" />}\n            <section className=\"mainsectionreview\">\n                <div class=\"page-wrapper p-t-180 p-b-100\">\n                    <div class=\"wrapper wrapper--w960\">\n                        <div class=\"card card-2\">\n                            <div class=\"card-body\">\n                                <h2 class=\"title\">Review Form</h2>\n                                <form onSubmit={SubmitHandler} >\n                                    <h4>Do you like the food?</h4>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input\n                                            className=\"radio-simple\"\n                                            type=\"radio\"\n                                            name=\"isLike\"\n                                            onChange={eventInput}\n                                            value=\"Yes\" />\n                                        <label class=\"form-check-label\" for=\"exampleRadios1\">\n                                            Yes\n                                        </label>\n                                    </div>\n                                    <div className=\"form-check form-check-inline\">\n                                        <input\n                                            type=\"radio\"\n                                            className=\"radio-simple\"\n                                            name=\"isLike\"\n                                            onChange={eventInput}\n                                            value=\"no\" />\n                                        <label class=\"form-check-label\" for=\"exampleRadios2\">\n                                            No\n                                        </label>\n                                    </div>\n                                    \n                                    <h4 className=\"form-heading\">Please rate the food</h4>\n                                    <div className=\"form-check form-check-inline\">\n                                        <ReactStars\n                                            count={5}\n                                            onChange={ratingChanged}\n                                            size={24}\n                                            isHalf={false}\n                                            emptyIcon={<i className=\"far fa-star\"></i>}\n                                            halfIcon={<i className=\"fa fa-star-half-alt\"></i>}\n                                            fullIcon={<i className=\"fa fa-star\"></i>}\n                                            activeColor=\"#ffd700\"\n                                        />\n                                    </div>\n\n                                    <div>\n                                        <label for=\"fname\" className=\"left-align2\"><h4>Comments</h4></label><br />\n                                        <textarea\n                                            placeholder=\"Enter Comment\"\n                                            value={data.Comment}\n                                            onChange={eventInput}\n                                            rows=\"4\" cols=\"50\" maxlength=\"200\"\n                                            name=\"Comment\"\n                                        >\n                                        </textarea>\n                                    </div>\n                                    <br /><br />\n                                    <div class=\"col-2\">\n                                        <div class=\"p-t-30\">\n                                            <button class=\"btn btn--radius btn--green\" type=\"submit\">Submit</button>\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n            <ToastContainer\n                position=\"top-center\"\n                autoClose={2000}\n                hideProgressBar={false}\n                newestOnTop={false}\n                closeOnClick\n                rtl={false}\n                pauseOnFocusLoss\n                draggable\n                pauseOnHover\n            />\n        </>\n    )\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}"],"sourceRoot":""}